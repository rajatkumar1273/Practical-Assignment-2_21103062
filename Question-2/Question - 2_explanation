Question :-

You are given the task to optimize a module for a digital calculator that can compute the product of two coefficient matrices of order 2n, 
where n is a natural number. 
Implement Strassen’s matrix multiplication algorithm for faster calculation of the product.

Explanation :-

In this question, we have to take two matrices as an input from the user.
Then, we have to multiply the matrices using Strassen’s matrix multiplication.

Strassen's algorithm is a recursive algorithm that reduces the number of multiplications required to compute the product of two matrices 
by recursively dividing them into submatrices.

Here are the steps for implementing Strassen's algorithm for multiplying two coefficient matrices of order 2n :

1. Divide both matrices A and B into four submatrices of size n x n each:

A = | A11 A12 | B = | B11 B12 |
| | | |
| A21 A22 | | B21 B22 |

2. Compute seven matrix products recursively using the submatrices:

P1 = A11 x (B12 - B22)
P2 = (A11 + A12) x B22
P3 = (A21 + A22) x B11
P4 = A22 x (B21 - B11)
P5 = (A11 + A22) x (B11 + B22)
P6 = (A12 - A22) x (B21 + B22)
P7 = (A11 - A21) x (B11 + B12)

3. Compute the four quadrants of the resulting matrix C using the products computed in step 2:

C11 = P5 + P4 - P2 + P6
C12 = P1 + P2
C21 = P3 + P4
C22 = P5 + P1 - P3 - P7

4. Recursively repeat steps 1-3 for each of the submatrices until the base case is reached where n=1, 
   at which point the matrix multiplication can be computed directly.

⭐️ The time complexity of Strassen's matrix multiplication is O(n^2.8) 
   which is less than the time complexity of normal matrix multiplication i.e. O(n^3)
